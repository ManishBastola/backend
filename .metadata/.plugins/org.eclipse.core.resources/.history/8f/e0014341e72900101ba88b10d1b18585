package com.bank.transfer_microservice.service;

import com.bank.transfer_microservice.model.Transfer;
import com.bank.transfer_microservice.repository.TransferRepository;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import java.time.LocalDateTime;
import java.util.List;

@Service
@RequiredArgsConstructor
public class TransferService {
    private final TransferRepository transferRepository;
    private final RestTemplate restTemplate;

    public Transfer saveTransfer(Long userId, String fromAccount, Transfer transfer) {
        // Check balance with account-microservice
        String url = "http://account-microservice/api/accounts/deduct?accountNumber=" + fromAccount + "&amount=" + transfer.getAmount();
        Boolean success = restTemplate.postForObject(url, null, Boolean.class);

        if (success == null || !success) {
            throw new RuntimeException("Insufficient balance or account not found");
        }

        transfer.setUserId(userId);
        transfer.setTimestamp(LocalDateTime.now());
        return transferRepository.save(transfer);
    }

    public List<Transfer> getTransfersByUserId(Long userId) {
        return transferRepository.findByUserId(userId);
    }
}
