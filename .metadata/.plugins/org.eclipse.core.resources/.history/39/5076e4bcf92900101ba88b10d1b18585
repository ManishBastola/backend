package com.bank.transfer_microservice.service;

import com.bank.transfer_microservice.model.Transfer;
import com.bank.transfer_microservice.repository.TransferRepository;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;
import org.springframework.http.*;

@Service
@RequiredArgsConstructor
public class TransferService {

    private final TransferRepository transferRepository;
    private final RestTemplate restTemplate;

    public Transfer makeTransfer(Transfer transfer) {
        String url = "http://ACCOUNT-MICROSERVICE/account/" + transfer.getSenderAccountId() + "/deduct";

        HttpHeaders headers = new HttpHeaders();
        headers.setContentType(MediaType.APPLICATION_JSON);

        HttpEntity<Double> request = new HttpEntity<>(transfer.getAmount(), headers);

        try {
            ResponseEntity<String> response = restTemplate.exchange(
                url, HttpMethod.POST, request, String.class
            );

            if (response.getStatusCode().is2xxSuccessful()) {
                transfer.setStatus("SUCCESS");
            } else {
                transfer.setStatus("FAILED");
            }
        } catch (Exception e) {
            transfer.setStatus("FAILED");
        }

        return transferRepository.save(transfer);
    }
}
