package com.bank.transfer_microservice.controller;

import com.bank.transfer_microservice.model.Transfer;
import com.bank.transfer_microservice.service.TransferService;
import com.bank.transfer_microservice.util.JwtUtil;
import lombok.RequiredArgsConstructor;
import org.springframework.web.bind.annotation.*;

import javax.servlet.http.HttpServletRequest;
import java.util.List;

@RestController
@RequestMapping("/api/transfer")
@RequiredArgsConstructor
public class TransferController {

    private final TransferService transferService;
    private final JwtUtil jwtUtil;

    @PostMapping("/{fromAccount}")
    public Transfer makeTransfer(@RequestBody Transfer transfer,
                                 @PathVariable String fromAccount,
                                 HttpServletRequest request) {
        String authHeader = request.getHeader("Authorization");
        Long userId = jwtUtil.extractUserId(authHeader.substring(7));
        return transferService.saveTransfer(userId, fromAccount, transfer);
    }

    @GetMapping
    public List<Transfer> getTransfers(HttpServletRequest request) {
        String authHeader = request.getHeader("Authorization");
        Long userId = jwtUtil.extractUserId(authHeader.substring(7));
        return transferService.getTransfersByUserId(userId);
    }
}
